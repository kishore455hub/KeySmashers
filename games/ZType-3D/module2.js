const a0_0x1f3fcd = a0_0x3760;
(function(_0xcc51b0, _0x39d3e5) {
    const _0x4cdd35 = a0_0x3760,
        _0x14996a = _0xcc51b0();
    while (!![]) {
        try {
            const _0x24e5f8 = -parseInt(_0x4cdd35(0xdc)) / 0x1 + parseInt(_0x4cdd35(0xd7)) / 0x2 + -parseInt(_0x4cdd35(0xe8)) / 0x3 * (parseInt(_0x4cdd35(0x10d)) / 0x4) + -parseInt(_0x4cdd35(0x114)) / 0x5 + -parseInt(_0x4cdd35(0x103)) / 0x6 * (-parseInt(_0x4cdd35(0xe2)) / 0x7) + parseInt(_0x4cdd35(0x186)) / 0x8 + parseInt(_0x4cdd35(0x170)) / 0x9 * (parseInt(_0x4cdd35(0xfd)) / 0xa);
            if (_0x24e5f8 === _0x39d3e5) break;
            else _0x14996a['push'](_0x14996a['shift']());
        } catch (_0xc82b32) {
            _0x14996a['push'](_0x14996a['shift']());
        }
    }
}(a0_0x4270, 0xb7d73));

function a0_0x3760(_0x3e42e7, _0x3b2666) {
    const _0x42707e = a0_0x4270();
    return a0_0x3760 = function(_0x376028, _0x10613c) {
        _0x376028 = _0x376028 - 0xc7;
        let _0x4ee806 = _0x42707e[_0x376028];
        return _0x4ee806;
    }, a0_0x3760(_0x3e42e7, _0x3b2666);
}

function destroyWord(_0xdc0b7) {
    const _0x51b001 = a0_0x3760;
    if (!_0xdc0b7 || !_0xdc0b7[_0x51b001(0xf7)]) return;
    const _0x146ca3 = _0xdc0b7[_0x51b001(0xd8)];
    _0x146ca3 && scene[_0x51b001(0xef)](_0x146ca3);
    let _0x341ea5 = 0x1,
        _0x5595da = 0x1f4,
        _0x1ba3ef = 0x1,
        _0x17d3db = 0x1;
    if ('hard_special' === _0xdc0b7[_0x51b001(0x185)]) {
        _0x341ea5 = 2.5, _0x5595da = 0x2bc, _0x1ba3ef = 1.6, _0x17d3db = 0.9, createExplosion(_0xdc0b7['mesh'][_0x51b001(0xf0)]['x'], _0xdc0b7[_0x51b001(0xf7)][_0x51b001(0xf0)]['y'], _0xdc0b7[_0x51b001(0xf7)][_0x51b001(0xf0)]['z'], _0x1ba3ef, _0xdc0b7[_0x51b001(0x185)], 0xffffff);
        if (!(_0xdc0b7[_0x51b001(0xf7)][_0x51b001(0xf0)]['z'] > 0xa)) {
            const _0x144373 = 0x3,
                _0x36acc0 = WORD_LISTS['alphabets'],
                _0x5b3880 = new Set(wordObjects[_0x51b001(0xf4)](_0x499e99 => _0x499e99[_0x51b001(0x151)] && _0x499e99[_0x51b001(0x151)][0x0] ? _0x499e99[_0x51b001(0x151)][0x0][_0x51b001(0xde)]() : null)[_0x51b001(0x15c)](Boolean)),
                _0x5c3c22 = _0x36acc0[_0x51b001(0x15c)](_0x47e634 => !_0x5b3880[_0x51b001(0x15f)](_0x47e634[0x0]['toLowerCase']()));
            let _0x2f8712 = [];
            _0x5c3c22[_0x51b001(0x178)] >= _0x144373 ? _0x2f8712 = _0x5c3c22[_0x51b001(0x134)](() => 0.5 - Math[_0x51b001(0xd1)]())[_0x51b001(0x14a)](0x0, _0x144373) : _0x2f8712 = _0x5c3c22[_0x51b001(0x134)](() => 0.5 - Math[_0x51b001(0xd1)]())[_0x51b001(0x14a)](0x0, _0x144373), gameState['pendingAsteroids'] += _0x144373, _0x2f8712['forEach']((_0x59091f, _0x10e72b) => {
                const _0x17879c = _0x51b001,
                    _0x4e61bf = Math[_0x17879c(0x150)](0x12c * Math[_0x17879c(0xd1)]());
                setTimeout(() => {
                    const _0x4f1300 = _0x17879c;
                    createMiniAlphabetFragment(_0xdc0b7['mesh'][_0x4f1300(0xf0)], _0x59091f, _0x10e72b, _0x144373);
                }, _0x4e61bf);
            });
        }
    } else {
        if (_0x51b001(0x146) === _0xdc0b7[_0x51b001(0x185)] && _0xdc0b7[_0x51b001(0x135)]) _0x341ea5 = 0.4, _0x5595da = 0xc8, _0x1ba3ef = 0.5, _0x17d3db = 1.5, createExplosion(_0xdc0b7[_0x51b001(0xf7)]['position']['x'], _0xdc0b7[_0x51b001(0xf7)][_0x51b001(0xf0)]['y'], _0xdc0b7[_0x51b001(0xf7)]['position']['z'], _0x1ba3ef, _0x51b001(0x142), 0xffffff);
        else {
            if (_0x51b001(0xd0) === _0xdc0b7[_0x51b001(0x185)]) {
                _0x341ea5 = 0x3, _0x5595da = 0x320, _0x1ba3ef = 0x2, _0x17d3db = 0.7, createExplosion(_0xdc0b7[_0x51b001(0xf7)]['position']['x'], _0xdc0b7[_0x51b001(0xf7)][_0x51b001(0xf0)]['y'], _0xdc0b7[_0x51b001(0xf7)][_0x51b001(0xf0)]['z'], _0x1ba3ef, _0xdc0b7[_0x51b001(0x185)], 0x9933ff);
                if (!(_0xdc0b7[_0x51b001(0xf7)]['position']['z'] > 0xa)) {
                    const _0x16cddc = 0x2,
                        _0x4d6def = WORD_LISTS[_0x51b001(0xeb)],
                        _0x4d1487 = new Set(wordObjects['map'](_0x158a53 => _0x158a53[_0x51b001(0x151)] && _0x158a53[_0x51b001(0x151)][0x0] ? _0x158a53[_0x51b001(0x151)][0x0]['toLowerCase']() : null)[_0x51b001(0x15c)](Boolean));
                    let _0x19358d = _0x4d6def[_0x51b001(0x15c)](_0x2d7703 => !_0x4d1487['has'](_0x2d7703[0x0]['toLowerCase']())),
                        _0x2a0ef2 = [];
                    if (_0x19358d['length'] >= _0x16cddc) {
                        let _0x4f896e = new Set();
                        for (let _0x31afd9 of _0x19358d)
                            if (!_0x4f896e['has'](_0x31afd9[0x0][_0x51b001(0xde)]()) && (_0x2a0ef2[_0x51b001(0x12f)](_0x31afd9), _0x4f896e[_0x51b001(0x11f)](_0x31afd9[0x0][_0x51b001(0xde)]()), _0x2a0ef2[_0x51b001(0x178)] === _0x16cddc)) break;
                    } else
                        for (let _0x40f1b2 = 0x0; _0x40f1b2 < _0x16cddc; _0x40f1b2++) {
                            const _0x1c0a7d = Math[_0x51b001(0x150)](Math[_0x51b001(0xd1)]() * _0x4d6def[_0x51b001(0x178)]);
                            _0x2a0ef2['push'](_0x4d6def[_0x1c0a7d]);
                        }
                    gameState['pendingAsteroids'] += _0x16cddc, _0x2a0ef2[_0x51b001(0xe7)]((_0x168ea1, _0x21f522) => {
                        const _0x1dfd41 = _0x51b001;
                        Math[_0x1dfd41(0x150)](0x12c * Math['random']()), setTimeout(() => {
                            const _0x138967 = _0x1dfd41,
                                _0x3e60ec = 0x2 * (Math[_0x138967(0xd1)]() - 0.5),
                                _0x4f7075 = 0x2 * (Math['random']() - 0.5),
                                _0x3b672e = createAsteroidGeometry(_0x168ea1, !0x0, !0x1, !0x0),
                                _0x15c5f3 = new THREE[(_0x138967(0x175))]({
                                    'color': _0x3b672e[_0x138967(0x157)],
                                    'shininess': 0xa,
                                    'specular': 0x444444,
                                    'flatShading': !0x0
                                }),
                                _0x4f9b2a = new THREE[(_0x138967(0xff))](_0x3b672e[_0x138967(0x115)], _0x15c5f3),
                                _0x22026b = new THREE[(_0x138967(0x184))]();
                            _0x22026b['add'](_0x4f9b2a);
                            const _0x343bf0 = _0x3b672e[_0x138967(0x115)][_0x138967(0xe0)]();
                            let _0x32856e;
                            _0x3b672e[_0x138967(0x168)], _0x343bf0[_0x138967(0x110)](1.2, 1.2, 1.2), _0x32856e = _0x3b672e[_0x138967(0x168)] ? 0xaa66ff : _0x3b672e[_0x138967(0x174)] ? 0xffffff : _0x138967(0x12b) === _0x3b672e['size'] ? 0xffff00 : 0x30ffea;
                            const _0x596f98 = new THREE[(_0x138967(0x107))]({
                                    'color': _0x32856e,
                                    'transparent': !0x0,
                                    'opacity': 0.3
                                }),
                                _0xec5d7 = new THREE[(_0x138967(0xff))](_0x343bf0, _0x596f98);
                            _0x22026b['add'](_0xec5d7), _0x22026b[_0x138967(0x116)]['x'] = Math[_0x138967(0xd1)]() * Math['PI'], _0x22026b[_0x138967(0x116)]['y'] = Math[_0x138967(0xd1)]() * Math['PI'], _0x22026b[_0x138967(0x116)]['z'] = Math[_0x138967(0xd1)]() * Math['PI'], _0x22026b[_0x138967(0xf0)][_0x138967(0x139)](_0xdc0b7[_0x138967(0xf7)][_0x138967(0xf0)]), _0x22026b['position']['x'] += _0x3e60ec, _0x22026b['position']['y'] += _0x4f7075, _0x22026b[_0x138967(0x110)][_0x138967(0xf5)](0.4, 0.4, 0.4), scene['add'](_0x22026b);
                            const _0x2f51e5 = createTextSprite(_0x168ea1),
                                _0x4e3f62 = new THREE[(_0x138967(0xf2))]();
                            _0x4e3f62[_0x138967(0xf0)]['copy'](_0x22026b[_0x138967(0xf0)]), _0x4e3f62['add'](_0x2f51e5), _0x3b672e[_0x138967(0x168)] ? _0x2f51e5['position']['set'](1.8 * -_0x3b672e[_0x138967(0xf1)], 0.5 * -_0x3b672e[_0x138967(0xf1)], 0x0) : _0x2f51e5['position']['set'](-_0x3b672e[_0x138967(0xf1)] - 1.6, -_0x3b672e[_0x138967(0xf1)] - 0.2, 0x0), scene[_0x138967(0x11f)](_0x4e3f62);
                            const _0x361d1e = {
                                'id': generateUUID(),
                                'mesh': _0x22026b,
                                'word': _0x168ea1,
                                'size': _0x3b672e['size'],
                                'radius': _0x3b672e[_0x138967(0xf1)],
                                'textSprite': _0x2f51e5,
                                'textContainer': _0x4e3f62,
                                'isFragment': !0x0,
                                'isSpecial': _0x3b672e[_0x138967(0x168)],
                                'isHardSpecial': _0x3b672e[_0x138967(0x174)],
                                'color': _0x3b672e[_0x138967(0x157)],
                                'rotationSpeed': {
                                    'x': 0.02 * (Math[_0x138967(0xd1)]() - 0.5),
                                    'y': 0.02 * (Math[_0x138967(0xd1)]() - 0.5),
                                    'z': 0.02 * (Math[_0x138967(0xd1)]() - 0.5)
                                },
                                'velocity': new THREE[(_0x138967(0x155))](_0xdc0b7[_0x138967(0xf9)]['x'] + 0.01 * _0x3e60ec, _0xdc0b7[_0x138967(0xf9)]['y'] + 0.01 * _0x4f7075, 0.9 * _0xdc0b7['velocity']['z'])
                            };
                            gameState[_0x138967(0xd3)]['push']({
                                'id': _0x361d1e['id'],
                                'text': _0x168ea1,
                                'typedChars': 0x0,
                                'isFragment': !0x0,
                                'isSpecial': _0x3b672e[_0x138967(0x168)],
                                'isHardSpecial': _0x3b672e['isHardSpecial']
                            }), wordObjects[_0x138967(0x12f)](_0x361d1e), _0x22026b[_0x138967(0xda)][_0x138967(0x13c)] = !0x0, _0x4e3f62['userData'][_0x138967(0x13c)] = !0x0, gameState[_0x138967(0x10e)] > 0x0 && gameState['pendingAsteroids']--;
                        }, 0x96 * _0x21f522);
                    });
                }
            } else createExplosion(_0xdc0b7[_0x51b001(0xf7)][_0x51b001(0xf0)]['x'], _0xdc0b7[_0x51b001(0xf7)][_0x51b001(0xf0)]['y'], _0xdc0b7[_0x51b001(0xf7)][_0x51b001(0xf0)]['z'], _0x1ba3ef, _0xdc0b7[_0x51b001(0x185)], _0xdc0b7['color']);
        }
    }
    scene[_0x51b001(0xef)](_0xdc0b7[_0x51b001(0xf7)]);
    const _0x48babf = wordObjects[_0x51b001(0x16a)](_0x175f49 => _0x175f49['id'] === _0xdc0b7['id']); - 0x1 !== _0x48babf && (wordObjects[_0x51b001(0x148)](_0x48babf, 0x1), _0xdc0b7['isFragment'] || _0x51b001(0x146) === _0xdc0b7[_0x51b001(0x185)] && _0xdc0b7[_0x51b001(0x135)] || (gameState[_0x51b001(0x140)] = (gameState[_0x51b001(0x140)] || 0x0) + 0x1));
    const _0xf3e5e1 = gameState[_0x51b001(0xd3)][_0x51b001(0x16a)](_0x258fcc => _0x258fcc['id'] === _0xdc0b7['id']); - 0x1 !== _0xf3e5e1 && gameState[_0x51b001(0xd3)]['splice'](_0xf3e5e1, 0x1), gameState[_0x51b001(0x125)] === _0xdc0b7['id'] && (gameState['activeWordId'] = null);
    let _0x4f59c9 = _0x51b001(0xc8);
    _0x51b001(0x12b) === _0xdc0b7['size'] ? _0x4f59c9 = 'large_explosion' : _0x51b001(0xe1) === _0xdc0b7['size'] ? _0x4f59c9 = _0x51b001(0x17b) : _0x51b001(0x142) === _0xdc0b7[_0x51b001(0x185)] || _0xdc0b7[_0x51b001(0x131)] ? _0x4f59c9 = 'small_explosion' : _0x51b001(0xd0) === _0xdc0b7[_0x51b001(0x185)] || _0x51b001(0x17e) === _0xdc0b7[_0x51b001(0x100)] ? _0x4f59c9 = _0x51b001(0x13a) : _0x51b001(0x136) !== _0xdc0b7['size'] && 'white' !== _0xdc0b7[_0x51b001(0x100)] || (_0x4f59c9 = _0x51b001(0x167)), playSound(_0x4f59c9, _0x17d3db);
    const _0x46656c = _0x51b001(0x146) === _0xdc0b7[_0x51b001(0x185)] && _0xdc0b7['isMiniAlphabet'],
        _0xedb5a2 = 'large' === _0xdc0b7[_0x51b001(0x185)],
        _0x5eeb0e = _0x51b001(0x136) === _0xdc0b7['size'] || _0x51b001(0x16f) === _0xdc0b7[_0x51b001(0x100)],
        _0x21da08 = _0x51b001(0xd0) === _0xdc0b7[_0x51b001(0x185)] || _0x51b001(0x17e) === _0xdc0b7[_0x51b001(0x100)];
    (!(_0xedb5a2 || _0x5eeb0e || _0x21da08) || _0x51b001(0x142) === _0xdc0b7['size'] || _0x46656c || _0xdc0b7[_0x51b001(0x131)] || shakeScreen(_0x341ea5, _0x5595da), updateEnterAbilityDisplay(), 0x0 !== wordObjects[_0x51b001(0x178)] || 0x0 !== gameState[_0x51b001(0x10e)] || gameState[_0x51b001(0xfb)] || gameState[_0x51b001(0x11c)] || gameState[_0x51b001(0x160)] || gameState[_0x51b001(0xd4)] && (gameState[_0x51b001(0xec)] += Date[_0x51b001(0x132)]() - gameState['wpmActiveStart'], gameState[_0x51b001(0xd4)] = 0x0), 0x0 !== wordObjects[_0x51b001(0x178)] || 0x0 !== gameState[_0x51b001(0x10e)] || gameState['gameOver'] || gameState[_0x51b001(0x11c)] || gameState[_0x51b001(0x160)] || debouncedCheckForPhaseTransition(), _0x51b001(0x146) === _0xdc0b7[_0x51b001(0x185)] && _0xdc0b7[_0x51b001(0x135)] && gameState[_0x51b001(0x160)]) && (wordObjects['some'](_0x419bc5 => _0x51b001(0x146) === _0x419bc5[_0x51b001(0x185)] && _0x419bc5[_0x51b001(0x135)]) || (gameState[_0x51b001(0x160)] = !0x1, 0x0 !== wordObjects[_0x51b001(0x178)] || 0x0 !== gameState[_0x51b001(0x10e)] || gameState['gameOver'] || gameState[_0x51b001(0x11c)] || debouncedCheckForPhaseTransition()));
}

function createExplosion(_0x1d87fc, _0x62a937, _0x93412b, _0x3d1fdf = 0x1, _0x4fad71 = a0_0x1f3fcd(0xeb), _0x380bd6 = 0x444444) {
    const _0x294013 = a0_0x1f3fcd,
        _0x23d6c4 = Math[_0x294013(0x150)]((0x8 + 0x8 * Math[_0x294013(0xd1)]()) * _0x3d1fdf),
        _0x59d453 = Math['floor'](0x14 * _0x3d1fdf),
        _0x1c3871 = (0x1 + (_0x294013(0x12b) === _0x4fad71 ? 0.5 : 0x0)) * _0x3d1fdf,
        _0x13e7da = (new THREE['Color'](_0x380bd6), []);
    for (let _0x5132d4 = 0x0; _0x5132d4 < _0x23d6c4; _0x5132d4++) {
        const _0x2d2aae = (0.1 + 0.3 * Math[_0x294013(0xd1)]()) * _0x3d1fdf,
            _0x197eea = _0x294013(0x12b) === _0x4fad71 ? 0x1 : 0x0,
            _0xf3ed1e = new THREE[(_0x294013(0xce))](_0x2d2aae, _0x197eea),
            _0x45fded = _0xf3ed1e['getAttribute']('position'),
            _0x3fceba = new THREE['Vector3']();
        for (let _0x3624e9 = 0x0; _0x3624e9 < _0x45fded['count']; _0x3624e9++) _0x3fceba[_0x294013(0x123)](_0x45fded, _0x3624e9), _0x3fceba['x'] += 0.1 * (Math[_0x294013(0xd1)]() - 0.5) * _0x3d1fdf, _0x3fceba['y'] += 0.1 * (Math[_0x294013(0xd1)]() - 0.5) * _0x3d1fdf, _0x3fceba['z'] += 0.1 * (Math[_0x294013(0xd1)]() - 0.5) * _0x3d1fdf, _0x45fded['setXYZ'](_0x3624e9, _0x3fceba['x'], _0x3fceba['y'], _0x3fceba['z']);
        _0xf3ed1e[_0x294013(0xee)]();
        const _0x733836 = new THREE[(_0x294013(0x127))](_0x380bd6);
        _0x733836[_0x294013(0x112)](1.2);
        const _0x21a450 = new THREE[(_0x294013(0x175))]({
                'color': _0x380bd6,
                'emissive': _0x733836,
                'emissiveIntensity': 0.7,
                'flatShading': !0x0
            }),
            _0x5ae430 = new THREE[(_0x294013(0xff))](_0xf3ed1e, _0x21a450);
        _0x5ae430[_0x294013(0xf0)][_0x294013(0xf5)](_0x1d87fc, _0x62a937, _0x93412b);
        const _0x36e9e7 = _0x294013(0x12b) === _0x4fad71 ? 0.7 : _0x294013(0x142) === _0x4fad71 ? 0.3 : 0.5,
            _0x8890e = new THREE['Vector3'](0.5 * (Math[_0x294013(0xd1)]() - 0.5) * _0x36e9e7, 0.5 * (Math[_0x294013(0xd1)]() - 0.5) * _0x36e9e7, 0.5 * (Math['random']() - 0.5) * _0x36e9e7);
        _0x8890e[_0x294013(0x16e)]()['multiplyScalar']((0.2 + 0.3 * Math['random']()) * _0x3d1fdf);
        const _0x2ecbc2 = new THREE[(_0x294013(0x155))]((0.2 * Math[_0x294013(0xd1)]() - 0.1) * _0x3d1fdf, (0.2 * Math[_0x294013(0xd1)]() - 0.1) * _0x3d1fdf, (0.2 * Math[_0x294013(0xd1)]() - 0.1) * _0x3d1fdf);
        _0x5ae430[_0x294013(0xda)] = {
            'velocity': _0x8890e,
            'rotationVelocity': _0x2ecbc2,
            'life': (0x1 + 0.5 * Math['random']()) * _0x1c3871
        }, scene[_0x294013(0x11f)](_0x5ae430), _0x13e7da[_0x294013(0x12f)](_0x5ae430);
    }
    const _0x3b62d4 = new THREE['SphereGeometry'](0.05 * _0x3d1fdf, 0x4, 0x4),
        _0x3244bf = new THREE[(_0x294013(0x127))](_0x380bd6);
    _0x3244bf[_0x294013(0xd9)](new THREE[(_0x294013(0x127))](0xffffff), 0.3);
    const _0x381050 = new THREE[(_0x294013(0x107))]({
            'color': _0x3244bf,
            'transparent': !0x0,
            'opacity': 0x1
        }),
        _0x457b10 = [];
    for (let _0x59e7e3 = 0x0; _0x59e7e3 < _0x59d453; _0x59e7e3++) {
        const _0x6f6e47 = new THREE['Mesh'](_0x3b62d4, _0x381050[_0x294013(0xe0)]());
        _0x6f6e47[_0x294013(0xf0)][_0x294013(0xf5)](_0x1d87fc, _0x62a937, _0x93412b);
        const _0x8e704e = 'large' === _0x4fad71 ? 1.2 : _0x294013(0x142) === _0x4fad71 ? 0.8 : 0x1,
            _0x39be00 = new THREE['Vector3'](0.8 * (Math[_0x294013(0xd1)]() - 0.5) * _0x8e704e, 0.8 * (Math['random']() - 0.5) * _0x8e704e, 0.8 * (Math[_0x294013(0xd1)]() - 0.5) * _0x8e704e);
        _0x6f6e47[_0x294013(0xda)] = {
            'velocity': _0x39be00,
            'life': (0.8 + 0.4 * Math[_0x294013(0xd1)]()) * _0x1c3871
        }, scene[_0x294013(0x11f)](_0x6f6e47), _0x457b10[_0x294013(0x12f)](_0x6f6e47);
    }
    const _0x29dc88 = new THREE[(_0x294013(0x11e))](0x1 * _0x3d1fdf, 0x10, 0x10),
        _0x95ee9 = new THREE[(_0x294013(0x127))](_0x380bd6);
    _0x95ee9[_0x294013(0xd9)](new THREE[(_0x294013(0x127))](0xffffff), 0.4);
    const _0x28854b = new THREE[(_0x294013(0x107))]({
            'color': _0x95ee9,
            'transparent': !0x0,
            'opacity': 0.8
        }),
        _0x133a86 = new THREE[(_0x294013(0xff))](_0x29dc88, _0x28854b);
    _0x133a86[_0x294013(0xf0)][_0x294013(0xf5)](_0x1d87fc, _0x62a937, _0x93412b), _0x133a86['scale'][_0x294013(0xf5)](0.1, 0.1, 0.1), _0x133a86[_0x294013(0xda)] = {
        'life': 0x1 * _0x1c3871
    }, scene[_0x294013(0x11f)](_0x133a86);
    const _0x3eaca6 = () => {
        const _0x301a21 = _0x294013;
        let _0x34f5ca = !0x1;
        if (_0x13e7da['forEach'](_0xc9c2f0 => {
                const _0x21b98c = a0_0x3760;
                _0xc9c2f0[_0x21b98c(0xda)][_0x21b98c(0x180)] > 0x0 && (_0x34f5ca = !0x0, _0xc9c2f0[_0x21b98c(0xf0)]['add'](_0xc9c2f0[_0x21b98c(0xda)][_0x21b98c(0xf9)]), _0xc9c2f0[_0x21b98c(0x116)]['x'] += _0xc9c2f0[_0x21b98c(0xda)]['rotationVelocity']['x'], _0xc9c2f0[_0x21b98c(0x116)]['y'] += _0xc9c2f0[_0x21b98c(0xda)]['rotationVelocity']['y'], _0xc9c2f0[_0x21b98c(0x116)]['z'] += _0xc9c2f0[_0x21b98c(0xda)]['rotationVelocity']['z'], _0xc9c2f0[_0x21b98c(0xda)][_0x21b98c(0xf9)][_0x21b98c(0x112)](0.98), _0xc9c2f0[_0x21b98c(0xda)][_0x21b98c(0x180)] -= 0.016, _0xc9c2f0[_0x21b98c(0xda)][_0x21b98c(0x180)] <= 0x0 ? scene[_0x21b98c(0xef)](_0xc9c2f0) : _0xc9c2f0[_0x21b98c(0xda)][_0x21b98c(0x180)] < 0.3 && (_0xc9c2f0[_0x21b98c(0xfa)][_0x21b98c(0x153)] = _0xc9c2f0['userData'][_0x21b98c(0x180)] / 0.3, _0xc9c2f0[_0x21b98c(0xfa)][_0x21b98c(0x133)] = !0x0));
            }), _0x457b10[_0x301a21(0xe7)](_0x42ee1e => {
                const _0x421c7d = _0x301a21;
                _0x42ee1e[_0x421c7d(0xda)][_0x421c7d(0x180)] > 0x0 && (_0x34f5ca = !0x0, _0x42ee1e[_0x421c7d(0xf0)][_0x421c7d(0x11f)](_0x42ee1e['userData'][_0x421c7d(0xf9)]), _0x42ee1e[_0x421c7d(0xda)][_0x421c7d(0x180)] -= 0.02, _0x42ee1e[_0x421c7d(0xfa)][_0x421c7d(0x153)] = _0x42ee1e['userData'][_0x421c7d(0x180)], _0x42ee1e[_0x421c7d(0xda)]['life'] <= 0x0 && scene['remove'](_0x42ee1e));
            }), _0x133a86[_0x301a21(0xda)][_0x301a21(0x180)] > 0x0) {
            _0x34f5ca = !0x0;
            const _0x47125f = _0x301a21(0x12b) === _0x4fad71 ? 1.4 : 'small' === _0x4fad71 ? 1.1 : 1.2;
            _0x133a86[_0x301a21(0x110)]['multiplyScalar'](_0x47125f), _0x133a86[_0x301a21(0xda)][_0x301a21(0x180)] -= 0.05, _0x133a86['material']['opacity'] = 0.8 * _0x133a86[_0x301a21(0xda)][_0x301a21(0x180)], _0x133a86['userData'][_0x301a21(0x180)] <= 0x0 && scene[_0x301a21(0xef)](_0x133a86);
        }
        _0x34f5ca && requestAnimationFrame(_0x3eaca6);
    };
    _0x3eaca6();
}

function findNextWord() {
    const _0x294e06 = a0_0x1f3fcd;
    gameState['activeWordIndex'] = -0x1, 0x0 !== gameState[_0x294e06(0xd3)][_0x294e06(0x178)] || 0x0 !== gameState[_0x294e06(0x10e)] || gameState['phaseTransitioning'] || checkForPhaseTransition(), updateActiveWord();
}

function a0_0x4270() {
    const _0x29a4f4 = ['random', 'hard', 'words', 'wpmActiveStart', 'cyan', 'currentInput', '1667316jQTmum', 'textContainer', 'lerp', 'userData', 'lastWpmUpdate', '827942viOPhf', 'wpmDisplayTarget', 'toLowerCase', 'justUnpaused', 'clone', 'medium-large', '7DhopYH', 'streak', 'settings', 'pauseStartTime', '#ff8800', 'forEach', '2958912yFJxYG', 'phaseNotificationComplete', 'parentNode', 'medium', 'wpmActiveTime', 'soundsManager', 'computeVertexNormals', 'remove', 'position', 'radius', 'Object3D', 'enterDestroyCount', 'map', 'set', 'dispose', 'mesh', 'createElement', 'velocity', 'material', 'gameOver', 'characterCount', '28970vnUahr', 'pause-button', 'Mesh', 'type', 'phase-notification-simple\x20temp-dom', 'transform', '4209852XWRLJK', 'animationFrame', '100%', 'toString', 'MeshBasicMaterial', 'dispatchEvent', 'red', 'gameOverReason', 'streak-level-1', 'streak-level-5', '4TfQuMA', 'pendingAsteroids', '\x0a\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22phase-number\x22>PHASE\x20', 'scale', 'wpm', 'multiplyScalar', 'startTime', '321405foGhwH', 'geometry', 'rotation', 'padStart', 'arc-streak-display', 'phase-overlay-simple\x20temp-dom', 'game', 'max', 'phaseTransitioning', 'totalTyped', 'SphereGeometry', 'add', 'top', 'data-phase', 'className', 'fromBufferAttribute', 'paused', 'activeWordId', 'arc-accuracy-display', 'Color', 'wpmAnimationInProgress', 'streak-level-3', 'rotate(', 'large', 'phase', 'accuracy', 'innerHTML', 'push', 'left', 'isFragment', 'now', 'transparent', 'sort', 'isMiniAlphabet', 'hard_special', 'wpmStarted', 'spawnTimeouts', 'copy', 'purple_explosion', 'removeEventListener', 'isWordObject', 'fullscreenElement', 'classList', 'phaseStartTime', 'wordsDestroyed', 'streak-milestone-animation', 'small', 'missedWord', 'log', 'streak-level-2', 'mini', 'width', 'splice', 'body', 'slice', 'musicVolume', 'totalPausedTime', 'div', 'getElementById', '2500', 'floor', 'word', '#00ffaa', 'opacity', 'longestStreak', 'Vector3', 'frameCount', 'color', 'correctTyped', 'enterAbilityUsed', 'round', 'removeChild', 'filter', '#ffff00', 'undefined', 'has', 'awaitingWhiteFragments', 'whiteFragmentHitCount', 'arc-wpm-display', 'sin', 'updateSoundVolume', 'fill', 'activeWordIndex', 'white_explosion', 'isSpecial', 'height', 'findIndex', 'score', 'zIndex', 'testing-mode-indicator', 'normalize', 'white', '1935JAcwuq', 'game-container', 'missedWords', 'screen', 'isHardSpecial', 'MeshPhongMaterial', 'style', 'asteroidsSpawned', 'length', 'wpmDisplayCurrent', 'endTime', 'medium_explosion', 'translate(-50%,\x20-50%)', 'updateActiveWordInterval', 'purple', 'setAttribute', 'life', '2499', 'easy', 'querySelectorAll', 'Group', 'size', '3787064VNzUki', '50%', 'small_explosion', 'arc-score-display', 'statsUpdateInterval', 'textContent', 'fixed', 'appendChild', 'IcosahedronGeometry', '</div>\x0a\x20\x20\x20\x20', 'special'];
    a0_0x4270 = function() {
        return _0x29a4f4;
    };
    return a0_0x4270();
}

function shakeWord(_0x437ac9) {
    const _0x1143af = a0_0x1f3fcd;
    if (_0x437ac9 >= 0x0 && _0x437ac9 < wordObjects['length']) {
        const _0x4e6849 = wordObjects[_0x437ac9],
            _0x24f673 = _0x4e6849[_0x1143af(0xf7)]['position']['x'];
        let _0x4cd971 = 0x0;
        const _0xbca010 = () => {
            const _0x5b20b4 = _0x1143af;
            if (_0x4cd971 < 0xa) {
                const _0x11da57 = _0x4cd971 % 0x2 == 0x0 ? 0.2 : -0.2;
                _0x4e6849[_0x5b20b4(0xf7)]['position']['x'] = _0x24f673 + _0x11da57, _0x4cd971++, setTimeout(_0xbca010, 0x1e);
            } else _0x4e6849[_0x5b20b4(0xf7)][_0x5b20b4(0xf0)]['x'] = _0x24f673;
        };
        _0xbca010();
    }
}

function updateAccuracy() {
    const _0x41561d = a0_0x1f3fcd,
        _0x573ccd = document[_0x41561d(0x14e)](_0x41561d(0x12d)),
        _0x45a6fa = document['getElementById'](_0x41561d(0x126));
    0x0 === gameState[_0x41561d(0x11d)] ? gameState[_0x41561d(0x12d)] = 0x0 : gameState[_0x41561d(0x12d)] = Math[_0x41561d(0x15a)](gameState[_0x41561d(0x158)] / gameState['totalTyped'] * 0x64);
    const _0x22d6be = gameState[_0x41561d(0x12d)] + '%';
    _0x573ccd && (_0x573ccd[_0x41561d(0xcb)] = _0x22d6be), _0x45a6fa && (_0x45a6fa[_0x41561d(0xcb)] = _0x22d6be), updateMiniStatsIndicator();
}

function updateScoreDisplay() {
    const _0x917966 = a0_0x1f3fcd,
        _0x3411df = document[_0x917966(0x14e)](_0x917966(0x16b)),
        _0x86ee86 = document[_0x917966(0x14e)](_0x917966(0xc9)),
        _0x6fb167 = gameState[_0x917966(0x16b)][_0x917966(0x106)]()[_0x917966(0x117)](0x6, '0');
    _0x3411df && (_0x3411df[_0x917966(0xcb)] = _0x6fb167), _0x86ee86 && (_0x86ee86[_0x917966(0xcb)] = _0x6fb167), updateMiniStatsIndicator();
}

function updatePhaseDisplay() {
    const _0x3e8bdc = a0_0x1f3fcd,
        _0x553938 = document[_0x3e8bdc(0x14e)]('wave');
    _0x553938 && (_0x553938[_0x3e8bdc(0xcb)] = gameState[_0x3e8bdc(0x12c)][_0x3e8bdc(0x106)]()[_0x3e8bdc(0x117)](0x3, '0'));
}

function updateStreakDisplay() {
    const _0x5aa88b = a0_0x1f3fcd,
        _0xcb5843 = document[_0x5aa88b(0x14e)](_0x5aa88b(0xe3)),
        _0x1ba8e9 = document['getElementById'](_0x5aa88b(0x118));
    if (_0xcb5843 && (_0xcb5843[_0x5aa88b(0xcb)] = gameState[_0x5aa88b(0xe3)]['toString']()), _0x1ba8e9) {
        const _0xcf1d0f = parseInt(_0x1ba8e9['textContent']) || 0x0,
            _0x3d8438 = gameState[_0x5aa88b(0xe3)];
        _0x1ba8e9[_0x5aa88b(0xcb)] = _0x3d8438[_0x5aa88b(0x106)](), _0x1ba8e9['classList'][_0x5aa88b(0xef)]('streak-level-1', _0x5aa88b(0x145), _0x5aa88b(0x129), 'streak-level-4', _0x5aa88b(0x10c), 'streak-level-6');
        let _0x46d223 = '',
            _0x375099 = !0x1,
            _0xcd5bae = 0x1;
        _0x3d8438 >= 0xc8 ? (_0x46d223 = 'streak-level-6', _0x375099 = _0xcf1d0f < 0xc8 && _0x3d8438 >= 0xc8, _0xcd5bae = 1.5) : _0x3d8438 >= 0xa0 ? (_0x46d223 = _0x5aa88b(0x10c), _0x375099 = _0xcf1d0f < 0xa0 && _0x3d8438 >= 0xa0, _0xcd5bae = 1.4) : _0x3d8438 >= 0x78 ? (_0x46d223 = 'streak-level-4', _0x375099 = _0xcf1d0f < 0x78 && _0x3d8438 >= 0x78, _0xcd5bae = 1.3) : _0x3d8438 >= 0x3c ? (_0x46d223 = _0x5aa88b(0x129), _0x375099 = _0xcf1d0f < 0x3c && _0x3d8438 >= 0x3c, _0xcd5bae = 1.2) : _0x3d8438 >= 0x1e ? (_0x46d223 = _0x5aa88b(0x145), _0x375099 = _0xcf1d0f < 0x1e && _0x3d8438 >= 0x1e, _0xcd5bae = 1.1) : _0x3d8438 >= 0xa && (_0x46d223 = _0x5aa88b(0x10b), _0x375099 = _0xcf1d0f < 0xa && _0x3d8438 >= 0xa, _0xcd5bae = 0x1), _0x46d223 && _0x1ba8e9[_0x5aa88b(0x13e)][_0x5aa88b(0x11f)](_0x46d223), _0x375099 && (playSound(_0x5aa88b(0xe3), _0xcd5bae), _0x1ba8e9[_0x5aa88b(0x13e)][_0x5aa88b(0x11f)]('streak-milestone-animation'), setTimeout(() => {
            const _0x495c2c = _0x5aa88b;
            _0x1ba8e9[_0x495c2c(0x13e)][_0x495c2c(0xef)](_0x495c2c(0x141));
        }, 0xfa0));
    }
    updateMiniStatsIndicator();
}

function animateWpmNeedleAcrossArc() {
    const _0x53e081 = a0_0x1f3fcd,
        _0x27def5 = document[_0x53e081(0x14e)](_0x53e081(0x162));
    if (!_0x27def5) return;
    gameState[_0x53e081(0x128)] = !0x0, gameState[_0x53e081(0xdd)] || (gameState[_0x53e081(0xdd)] = {
        'wpm': 0x0,
        'x': 0x0,
        'y': 0x0,
        'angle': 0x0,
        'colorIndex': 0x0,
        'colorRatio': 0x0
    }), gameState['wpmDisplayCurrent'] || (gameState[_0x53e081(0x179)] = {
        'wpm': 0x0,
        'x': 0x0,
        'y': 0x0,
        'angle': 0x0,
        'colorIndex': 0x0,
        'colorRatio': 0x0
    });
    const _0x34f8c5 = 0xc8;
    let _0x35c786 = 0x0;
    gameState[_0x53e081(0x179)][_0x53e081(0x111)] = 0x0, gameState[_0x53e081(0xdd)][_0x53e081(0x111)] = 0x0;
    const _0x3e738c = () => {
        const _0x1b01e0 = _0x53e081;
        let _0x1a8aab;
        _0x1a8aab = _0x35c786 <= 0x64 ? _0x35c786 / 0x64 : 0x1 - (_0x35c786 - 0x64) / 0x64;
        const _0x2e02c5 = Math['PI'] - _0x1a8aab * Math['PI'],
            _0x5b7381 = 0x64 + 0x60 * Math['cos'](_0x2e02c5),
            _0x1b287a = 0x64 - 0x60 * Math[_0x1b01e0(0x163)](_0x2e02c5),
            _0xc2502f = 0xb4 * _0x1a8aab - 0x5a,
            _0x4f7ba9 = [_0x1b01e0(0xd5), _0x1b01e0(0x152), _0x1b01e0(0x15d), _0x1b01e0(0xe6), _0x1b01e0(0x109)],
            _0x40aa56 = Math[_0x1b01e0(0x150)](_0x1a8aab * (_0x4f7ba9[_0x1b01e0(0x178)] - 0x1)),
            _0x2ba16d = _0x1a8aab * (_0x4f7ba9[_0x1b01e0(0x178)] - 0x1) - _0x40aa56;
        let _0x14808d;
        if (_0x27def5[_0x1b01e0(0x17f)]('x', _0x5b7381), _0x27def5[_0x1b01e0(0x17f)]('y', _0x1b287a), _0x27def5[_0x1b01e0(0x17f)](_0x1b01e0(0x102), _0x1b01e0(0x12a) + _0xc2502f + ',\x20' + _0x5b7381 + ',\x20' + _0x1b287a + ')'), _0x1a8aab >= 0x1) _0x14808d = _0x4f7ba9[_0x4f7ba9[_0x1b01e0(0x178)] - 0x1];
        else {
            if (_0x40aa56 < _0x4f7ba9['length'] - 0x1) _0x14808d = interpolateColors(_0x4f7ba9[_0x40aa56], _0x4f7ba9[_0x40aa56 + 0x1], _0x2ba16d);
            else _0x14808d = _0x4f7ba9[_0x40aa56];
        }
        _0x27def5[_0x1b01e0(0x17f)](_0x1b01e0(0x165), _0x14808d);
        const _0x40554b = Math[_0x1b01e0(0x15a)](0xb4 * _0x1a8aab);
        _0x27def5['textContent'] = _0x40554b['toString'](), gameState['wpmDisplayCurrent'] = {
            'wpm': _0x40554b,
            'x': _0x5b7381,
            'y': _0x1b287a,
            'angle': _0xc2502f,
            'colorIndex': _0x40aa56,
            'colorRatio': _0x2ba16d
        }, gameState[_0x1b01e0(0xdd)] = { ...gameState[_0x1b01e0(0x179)]
        }, _0x35c786++, _0x35c786 <= _0x34f8c5 ? setTimeout(() => {
            requestAnimationFrame(_0x3e738c);
        }, 0xf) : (gameState[_0x1b01e0(0x111)] = 0x0, gameState[_0x1b01e0(0x128)] = !0x1, updateWpmDisplay());
    };
    _0x3e738c();
}

function startGame() {
    const _0x96ce34 = a0_0x1f3fcd;
    gameState[_0x96ce34(0x104)] && (cancelAnimationFrame(gameState[_0x96ce34(0x104)]), gameState[_0x96ce34(0x104)] = null), resetGame(), gameState[_0x96ce34(0x166)] = -0x1, updateScoreDisplay(), updatePhaseDisplay(), updateAccuracy(), updateStreakDisplay(), updateWpmDisplay(), updateLivesDisplay(), updateEnterAbilityDisplay(), animateWpmNeedleAcrossArc(), initMiniStatsIndicator(), updateMiniStatsIndicator(), gameState[_0x96ce34(0x113)] = Date[_0x96ce34(0x132)](), gameState[_0x96ce34(0xdb)] = gameState['startTime'], gameState[_0x96ce34(0x13f)] = gameState[_0x96ce34(0x113)], setScreen('game'), scene || initThreeJs(), playSound('start'), gameState[_0x96ce34(0x12c)] = 0x1, gameState['phaseTransitioning'] = !0x0, showPhaseNotification(0x1), document[_0x96ce34(0x13b)](_0x96ce34(0xe9), onPhaseNotificationComplete), document['addEventListener'](_0x96ce34(0xe9), onPhaseNotificationComplete, {
        'once': !0x0
    }), lastFrameTime = Date[_0x96ce34(0x132)](), gameState[_0x96ce34(0x104)] = requestAnimationFrame(animate), gameState[_0x96ce34(0xec)] = 0x0, gameState['wpmActiveStart'] = 0x0;
    const _0x2a79bf = document[_0x96ce34(0x14e)](_0x96ce34(0xfe));
    _0x2a79bf && (_0x2a79bf[_0x96ce34(0x12e)] = '||', _0x2a79bf['classList']['remove'](_0x96ce34(0x124))), gameState[_0x96ce34(0xca)] || (gameState[_0x96ce34(0xca)] = setInterval(() => {
        throttledStatsUpdate();
    }, 0xc8)), gameState[_0x96ce34(0x17d)] && clearInterval(gameState['updateActiveWordInterval']), gameState[_0x96ce34(0x17d)] = setInterval(() => {
        const _0x321b27 = _0x96ce34;
        _0x321b27(0x11a) !== gameState[_0x321b27(0x173)] || gameState[_0x321b27(0x124)] || gameState[_0x321b27(0xfb)] || updateActiveWord();
    }, 0xc8), gameState['enterDestroyCount'] = 0x3;
}

function showPhaseNotification(_0x35fbe4) {
    const _0x146b13 = a0_0x1f3fcd,
        _0x30b835 = document[_0x146b13(0x183)]('.phase-notification-simple,\x20.phase-overlay-simple');
    _0x30b835['length'] > 0x0 && _0x30b835[_0x146b13(0xe7)](_0x111e56 => {
        const _0xa179c8 = _0x146b13;
        _0x111e56[_0xa179c8(0xea)] && _0x111e56['parentNode']['removeChild'](_0x111e56);
    }), playSound(_0x146b13(0xe3), 0.7 + 0.1 * _0x35fbe4);
    let _0x53ad30 = document[_0x146b13(0x13d)] || document['getElementById'](_0x146b13(0x171)) || document[_0x146b13(0x149)];
    const _0x4b9233 = document['createElement'](_0x146b13(0x14d));
    _0x4b9233[_0x146b13(0x122)] = _0x146b13(0x119), _0x4b9233[_0x146b13(0x176)][_0x146b13(0x153)] = '0', _0x4b9233['style'][_0x146b13(0xf0)] = _0x146b13(0xcc), _0x4b9233[_0x146b13(0x176)][_0x146b13(0x120)] = '0', _0x4b9233['style'][_0x146b13(0x130)] = '0', _0x4b9233[_0x146b13(0x176)][_0x146b13(0x147)] = _0x146b13(0x105), _0x4b9233['style'][_0x146b13(0x169)] = '100%', _0x4b9233['style']['zIndex'] = _0x146b13(0x181), _0x53ad30[_0x146b13(0xcd)](_0x4b9233);
    const _0x2837f9 = document[_0x146b13(0xf8)](_0x146b13(0x14d));
    _0x2837f9[_0x146b13(0x122)] = _0x146b13(0x101), _0x2837f9[_0x146b13(0x17f)](_0x146b13(0x121), _0x35fbe4), _0x2837f9[_0x146b13(0x176)][_0x146b13(0x153)] = '0', _0x2837f9['style'][_0x146b13(0xf0)] = 'fixed', _0x2837f9['style'][_0x146b13(0x120)] = _0x146b13(0xc7), _0x2837f9['style']['left'] = _0x146b13(0xc7), _0x2837f9[_0x146b13(0x176)]['transform'] = _0x146b13(0x17c), _0x2837f9['style'][_0x146b13(0x16c)] = _0x146b13(0x14f), _0x2837f9[_0x146b13(0x12e)] = _0x146b13(0x10f) + _0x35fbe4 + _0x146b13(0xcf), _0x53ad30[_0x146b13(0xcd)](_0x2837f9), setTimeout(() => {
        const _0x28e3f8 = _0x146b13;
        _0x4b9233['style']['opacity'] = '1', _0x2837f9[_0x28e3f8(0x176)][_0x28e3f8(0x153)] = '1';
    }, 0xa), setTimeout(() => {
        const _0x5c98f9 = _0x146b13;
        _0x2837f9[_0x5c98f9(0xea)] && (_0x2837f9['style'][_0x5c98f9(0x153)] = '0', _0x4b9233[_0x5c98f9(0x176)]['opacity'] = '0', setTimeout(() => {
            const _0x1ae517 = _0x5c98f9;
            _0x2837f9['parentNode'] && _0x2837f9[_0x1ae517(0xea)][_0x1ae517(0x15b)](_0x2837f9), _0x4b9233[_0x1ae517(0xea)] && _0x4b9233[_0x1ae517(0xea)][_0x1ae517(0x15b)](_0x4b9233), gameState['gameOver'] || setTimeout(() => {
                const _0x3a401d = _0x1ae517;
                document[_0x3a401d(0x108)](new CustomEvent(_0x3a401d(0xe9)));
            }, 0x1f4);
        }, 0x1f4));
    }, 0x7d0);
}

function startPhase(_0x98c9) {
    const _0x5d832c = a0_0x1f3fcd;
    _0x98c9 < 0x1 && (_0x98c9 = 0x1), gameState[_0x5d832c(0x138)][_0x5d832c(0xe7)](_0x4f6efc => clearTimeout(_0x4f6efc)), gameState[_0x5d832c(0x138)] = [], gameState[_0x5d832c(0x12c)] = _0x98c9, gameState[_0x5d832c(0x13f)] = Date['now'](), gameState[_0x5d832c(0x177)] = 0x0, gameState[_0x5d832c(0x10e)] = 0x0, gameState['whiteFragmentHitCount'] = 0x0, calculatePhaseSpeed(_0x98c9);
    if (scene) clearWordObjects(), gameState[_0x5d832c(0x166)] = -0x1, updateActiveWord(), updatePhaseDisplay(), 0x1 === _0x98c9 ? (spawnPhase1Asteroids(), gameState[_0x5d832c(0x137)] = !0x1) : 0x2 === _0x98c9 ? spawnPhase2Asteroids() : _0x98c9 >= 0x3 && spawnPhase3Asteroids();
    else {
        initThreeJs();
        const _0x72c6df = setTimeout(() => startPhase(_0x98c9), 0x1f4);
        gameState['spawnTimeouts'][_0x5d832c(0x12f)](_0x72c6df);
    }
}

function calculatePhaseSpeed(_0x484530) {
    const _0x36e438 = a0_0x1f3fcd;
    return 0.4 * (0.02 + 0.0075 * Math[_0x36e438(0x144)](_0x484530));
}

function spawnPhase1Asteroids() {
    const _0x38422f = a0_0x1f3fcd;
    if ((0x0 === gameState[_0x38422f(0x10e)] || gameState[_0x38422f(0xdf)]) && (gameState[_0x38422f(0x10e)] = 0x2 - gameState[_0x38422f(0x177)], gameState[_0x38422f(0xdf)] = !0x1), gameState['asteroidsSpawned'] < 0x2) {
        if ('undefined' != typeof scene) {
            const _0x31a074 = calculatePhaseSpeed(0x1);
            if (addNewWord('easy', _0x31a074), gameState['asteroidsSpawned']++, gameState[_0x38422f(0x10e)] > 0x0 && gameState[_0x38422f(0x10e)]--, gameState[_0x38422f(0x177)] < 0x2) {
                const _0x3f55c7 = setTimeout(spawnPhase1Asteroids, 0x3e8);
                gameState[_0x38422f(0x138)][_0x38422f(0x12f)](_0x3f55c7);
            }
        } else {
            const _0x435c99 = setTimeout(spawnPhase1Asteroids, 0x1f4);
            gameState['spawnTimeouts'][_0x38422f(0x12f)](_0x435c99);
        }
    }
}

function spawnPhase2Asteroids() {
    const _0x228046 = a0_0x1f3fcd;
    if ((0x0 === gameState[_0x228046(0x10e)] || gameState[_0x228046(0xdf)]) && (gameState['pendingAsteroids'] = 0x3 - gameState['asteroidsSpawned'], gameState[_0x228046(0xdf)] = !0x1), gameState['asteroidsSpawned'] < 0x3) {
        if (_0x228046(0x15e) != typeof scene) {
            const _0x191cf3 = calculatePhaseSpeed(0x2);
            if (0x0 !== gameState[_0x228046(0x177)] || gameState['paused'] || gameState[_0x228046(0xfb)] || gameState['wpmActiveStart'] || (gameState[_0x228046(0xd4)] = Date[_0x228046(0x132)]()), addNewWord('medium', _0x191cf3), gameState[_0x228046(0x177)]++, gameState[_0x228046(0x10e)] > 0x0 && gameState['pendingAsteroids']--, gameState['asteroidsSpawned'] < 0x3) {
                const _0x1574ed = setTimeout(spawnPhase2Asteroids, 0x384);
                gameState[_0x228046(0x138)][_0x228046(0x12f)](_0x1574ed);
            }
        } else {
            const _0x1224d0 = setTimeout(spawnPhase2Asteroids, 0x1f4);
            gameState[_0x228046(0x138)][_0x228046(0x12f)](_0x1224d0);
        }
    }
}

function spawnPhase3Asteroids() {
    const _0x16cfbe = a0_0x1f3fcd,
        _0x33d7bc = 0x3 + Math[_0x16cfbe(0x150)](0.35 * gameState[_0x16cfbe(0x12c)]);
    if ((0x0 === gameState[_0x16cfbe(0x10e)] || gameState[_0x16cfbe(0xdf)]) && (gameState['pendingAsteroids'] = _0x33d7bc - gameState[_0x16cfbe(0x177)], gameState['justUnpaused'] = !0x1), gameState['asteroidsSpawned'] < _0x33d7bc) {
        if (_0x16cfbe(0x15e) != typeof scene) {
            const _0x28f238 = calculatePhaseSpeed(gameState['phase']);
            0x0 !== gameState[_0x16cfbe(0x177)] || gameState['paused'] || gameState['gameOver'] || gameState[_0x16cfbe(0xd4)] || (gameState[_0x16cfbe(0xd4)] = Date['now']());
            const _0x256523 = Math['random'](),
                _0x2ce176 = gameState[_0x16cfbe(0x12c)];
            if (_0x2ce176 >= 0x3 && _0x2ce176 < 0x5 ? _0x256523 < 0.6 ? addNewWord(_0x16cfbe(0xeb), _0x28f238) : _0x256523 < 0.8 ? addNewWord(_0x16cfbe(0x182), _0x28f238) : addNewWord(_0x16cfbe(0xd2), _0x28f238) : _0x2ce176 >= 0x5 && _0x2ce176 < 0x8 ? _0x256523 < 0.45 ? addNewWord(_0x16cfbe(0xeb), _0x28f238) : _0x256523 < 0.8 ? addNewWord('hard', _0x28f238) : _0x256523 < 0.9 ? addSpecialAsteroid(_0x28f238) : addHardSpecialAsteroid(_0x28f238) : _0x256523 < 0.3 ? addNewWord(_0x16cfbe(0x182), 1.15 * _0x28f238) : _0x256523 < 0.5 ? addNewWord(_0x16cfbe(0xeb), 1.05 * _0x28f238) : _0x256523 < 0.6 ? addNewWord(_0x16cfbe(0xd2), _0x28f238) : _0x256523 < 0.8 ? addNewWord('hard', 0.9 * _0x28f238) : _0x256523 < 0.9 ? addSpecialAsteroid(_0x28f238) : addHardSpecialAsteroid(_0x28f238), gameState[_0x16cfbe(0x177)]++, gameState[_0x16cfbe(0x10e)] > 0x0 && gameState[_0x16cfbe(0x10e)]--, gameState[_0x16cfbe(0x177)] < _0x33d7bc) {
                const _0x260715 = 0x3e8,
                    _0x1a9d6a = 0x32 * _0x2ce176,
                    _0x3e26e1 = Math[_0x16cfbe(0x11b)](0x12c, _0x260715 - _0x1a9d6a),
                    _0x1e5a8b = setTimeout(() => spawnPhase3Asteroids(), _0x3e26e1);
                gameState[_0x16cfbe(0x138)][_0x16cfbe(0x12f)](_0x1e5a8b);
            }
        } else {
            const _0x20f13f = setTimeout(spawnPhase3Asteroids, 0x12c);
            gameState[_0x16cfbe(0x138)][_0x16cfbe(0x12f)](_0x20f13f);
        }
    }
}

function resetGame() {
    const _0xfdd78d = a0_0x1f3fcd;
    gameState[_0xfdd78d(0x138)][_0xfdd78d(0xe7)](_0xaff7a5 => clearTimeout(_0xaff7a5)), gameState[_0xfdd78d(0x138)] = [], gameState[_0xfdd78d(0x104)] && (cancelAnimationFrame(gameState['animationFrame']), gameState[_0xfdd78d(0x104)] = null), document[_0xfdd78d(0x13b)](_0xfdd78d(0xe9), onPhaseNotificationComplete), EventManager['removeByType']('phaseNotificationComplete'), clearWordObjects();
    const _0x5acec4 = document['getElementById'](_0xfdd78d(0x16d));
    _0x5acec4 && _0x5acec4[_0xfdd78d(0xef)]();
    const _0x2b7d43 = document[_0xfdd78d(0x14e)]('bottom-center-word');
    _0x2b7d43 && _0x2b7d43[_0xfdd78d(0xef)](), gameState[_0xfdd78d(0x12c)] = 0x1, gameState[_0xfdd78d(0x16b)] = 0x0, gameState[_0xfdd78d(0x12d)] = 0x0, gameState[_0xfdd78d(0x111)] = 0x0, gameState[_0xfdd78d(0xfc)] = 0x0, gameState['streak'] = 0x0, gameState[_0xfdd78d(0x154)] = 0x0, gameState[_0xfdd78d(0x11d)] = 0x0, gameState['correctTyped'] = 0x0, gameState['lives'] = 0x3, gameState[_0xfdd78d(0x161)] = 0x0, gameState['words'] = [], gameState[_0xfdd78d(0x166)] = -0x1, gameState[_0xfdd78d(0xd6)] = '', gameState['timeLastWordAdded'] = 0x0, gameState[_0xfdd78d(0x156)] = 0x0, gameState['paused'] = !0x1, gameState[_0xfdd78d(0xe5)] = 0x0, gameState[_0xfdd78d(0x14c)] = 0x0, gameState[_0xfdd78d(0xfb)] = !0x1, gameState[_0xfdd78d(0x113)] = 0x0, gameState[_0xfdd78d(0x17a)] = 0x0, gameState['wordsDestroyed'] = 0x0, gameState[_0xfdd78d(0x143)] = '', gameState[_0xfdd78d(0x10a)] = '', gameState[_0xfdd78d(0x11c)] = !0x1, gameState[_0xfdd78d(0x13f)] = 0x0, gameState['asteroidsSpawned'] = 0x0, gameState[_0xfdd78d(0x10e)] = 0x0, gameState[_0xfdd78d(0x172)] = [], window[_0xfdd78d(0xed)] && (soundsManager[_0xfdd78d(0x164)](gameState['settings']['soundVolume']), soundsManager['updateMusicVolume'](gameState[_0xfdd78d(0xe4)][_0xfdd78d(0x14b)]));
    for (let _0x8ef939 = particles[_0xfdd78d(0x178)] - 0x1; _0x8ef939 >= 0x0; _0x8ef939--) {
        const _0x2f897a = particles[_0x8ef939];
        _0x2f897a && (_0x2f897a[_0xfdd78d(0xfa)] && (Array['isArray'](_0x2f897a['material']) ? _0x2f897a[_0xfdd78d(0xfa)][_0xfdd78d(0xe7)](_0x4e7531 => _0x4e7531[_0xfdd78d(0xf6)]()) : _0x2f897a[_0xfdd78d(0xfa)][_0xfdd78d(0xf6)]()), _0x2f897a[_0xfdd78d(0x115)] && _0x2f897a[_0xfdd78d(0x115)][_0xfdd78d(0xf6)](), scene['remove'](_0x2f897a));
    }
    particles = [], updateLivesDisplay(), updateScoreDisplay(), updatePhaseDisplay(), updateAccuracy(), updateStreakDisplay(), updateWpmDisplay(), updateEnterAbilityDisplay(), gameState[_0xfdd78d(0xec)] = 0x0, gameState[_0xfdd78d(0xd4)] = 0x0, gameState[_0xfdd78d(0x137)] = !0x1, cleanupTemporaryDomElements(), gameState[_0xfdd78d(0xca)] && (clearInterval(gameState[_0xfdd78d(0xca)]), gameState[_0xfdd78d(0xca)] = null), gameState[_0xfdd78d(0xf3)] = 0x3, gameState[_0xfdd78d(0x159)] = !0x1;
}